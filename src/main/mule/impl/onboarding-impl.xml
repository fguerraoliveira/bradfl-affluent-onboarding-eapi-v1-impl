<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="post-onboardings-impl-subflow" doc:id="95e4ea42-d9ec-4f48-af25-6c9b6e4b6d97">
		<ee:transform doc:name="Request Config" doc:id="7f11ad1a-9724-4650-b3ed-487d963af6e1">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"taxIdNumber": vars.originalPayload.taxIdNumber,
	"prospectDataExternalId": vars.originalPayload.prospectDataExternalId
}]]></ee:set-payload>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="requestConfig"><![CDATA[%dw 2.0
output application/java

import * from dwl::HttpClient

var baseExternalService = "processApi.affluentManagement."
var operation = "createCustomerProductOnboarding."
var apiCallName = "postOnboarding.affluentManagement."
var securedProperty = false

var clientIdHeaderName = serviceProperty(baseExternalService,'auth.clientId.headerName')
var clientSecretHeaderName = serviceProperty(baseExternalService,'auth.clientSecret.headerName')



---
{
	method: callProperty(baseExternalService, operation, apiCallName, "method"),
	headers: (createAuthHeadersIfEnabled(baseExternalService, clientIdHeaderName, clientSecretHeaderName, securedProperty)),
	queryParams:  {},
	uriParams: {
		"tenantId": vars.tenantUuid
	},
	maxRetries: callProperty(baseExternalService, operation, apiCallName, "maxRetries"),
	millisBetweenRetries: callProperty(baseExternalService, operation, apiCallName, "millisBetweenRetries"),
	path: callProperty(baseExternalService, operation, apiCallName, "path")
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
		<flow-ref doc:name="affluentManagement-http-request" doc:id="c7077770-c971-4dc8-9e0f-22c8ede2e06c" name="affluentManagementPapi-http-request" />
		<ee:transform doc:name="httpStatus, response" doc:id="0860fa1c-c96d-42b4-afbe-0aba4c6e639d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"
---
payload.httpResponse]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[payload.httpStatusCode]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="post-screening-requests-impl-subflow" doc:id="9b9091db-9637-487e-be99-b55f851610b3" >
		<ee:transform doc:name="Request Config" doc:id="9ac7dc02-c8cd-4ec9-8ebc-78503bc80d4f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"validationCategoryCode": "SOURCE_DATA_VALIDATION"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="requestConfig" ><![CDATA[%dw 2.0
output application/java

import * from dwl::HttpClient

var baseExternalService = "processApi.customerProductsOnboarding."
var operation = "screeningRequests."
var apiCallName = "postScreeningRequests.customerProductsOnboarding."
var securedProperty = false

var clientIdHeaderName = serviceProperty(baseExternalService,'auth.clientId.headerName')
var clientSecretHeaderName = serviceProperty(baseExternalService,'auth.clientSecret.headerName')



---
{
	method: callProperty(baseExternalService, operation, apiCallName, "method"),
	headers: (createAuthHeadersIfEnabled(baseExternalService, clientIdHeaderName, clientSecretHeaderName, securedProperty)),
	queryParams:  {},
	uriParams: {
		"tenantId": vars.tenantUuid,
		"id": vars.onboardingUuid
	},
	maxRetries: callProperty(baseExternalService, operation, apiCallName, "maxRetries"),
	millisBetweenRetries: callProperty(baseExternalService, operation, apiCallName, "millisBetweenRetries"),
	path: callProperty(baseExternalService, operation, apiCallName, "path")
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="customerProductsOnboardingPapi-http-request" doc:id="b14dff37-a5c7-4fe9-a9ce-16a14b29d30a" name="customerProductsOnboardingPapi-http-request" />
		<ee:transform doc:name="httpStatus, response" doc:id="58da1e5c-9714-4098-8857-e5aa2f1a7e14" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"
---
payload.httpResponse]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[payload.httpStatusCode]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="post-ppe-screening-requests-impl-subflow" doc:id="1a7cc13b-d880-40fe-90df-6dbd2306149c" >
		<ee:transform doc:name="Request Config" doc:id="1795676b-2ecf-40d2-af29-47ee710c8c18" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"validationCategoryCode": "PPE_DATA_VALIDATION"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="requestConfig" ><![CDATA[%dw 2.0
output application/java

import * from dwl::HttpClient

var baseExternalService = "processApi.customerProductsOnboarding."
var operation = "screeningRequests."
var apiCallName = "postPPEScreeningRequests.customerProductsOnboarding."
var securedProperty = false

var clientIdHeaderName = serviceProperty(baseExternalService,'auth.clientId.headerName')
var clientSecretHeaderName = serviceProperty(baseExternalService,'auth.clientSecret.headerName')



---
{
	method: callProperty(baseExternalService, operation, apiCallName, "method"),
	headers: (createAuthHeadersIfEnabled(baseExternalService, clientIdHeaderName, clientSecretHeaderName, securedProperty)),
	queryParams:  {},
	uriParams: {
		"tenantId": vars.tenantUuid,
		"id": vars.onboardingUuid
	},
	maxRetries: callProperty(baseExternalService, operation, apiCallName, "maxRetries"),
	millisBetweenRetries: callProperty(baseExternalService, operation, apiCallName, "millisBetweenRetries"),
	path: callProperty(baseExternalService, operation, apiCallName, "path")
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="customerProductsOnboardingPapi-http-request" doc:id="2af5d51e-27ca-44b2-bf36-54791bc86af3" name="customerProductsOnboardingPapi-http-request" />
		<ee:transform doc:name="httpStatus, response" doc:id="fe5e7fc2-a4e2-4408-801b-38d6e24a4dbf" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"
---
payload.httpResponse]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[payload.httpStatusCode]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
</mule>
