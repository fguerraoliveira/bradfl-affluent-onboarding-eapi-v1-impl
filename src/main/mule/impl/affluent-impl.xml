<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="post-onboardings-impl-subflow" doc:id="95e4ea42-d9ec-4f48-af25-6c9b6e4b6d97">
		<ee:transform doc:name="Request Config" doc:id="7f11ad1a-9724-4650-b3ed-487d963af6e1">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	"taxIdNumber": vars.originalPayload.taxIdNumber,
	"prospectDataExternalId": vars.originalPayload.prospectDataExternalId
}]]></ee:set-payload>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="requestConfig"><![CDATA[%dw 2.0
output application/java

import * from dwl::HttpClient

var baseExternalService = "processApi.affluentManagement."
var operation = "createCustomerProductOnboarding."
var apiCallName = "postOnboarding.affluentManagement."
var securedProperty = false

var clientIdHeaderName = serviceProperty(baseExternalService,'auth.clientId.headerName')
var clientSecretHeaderName = serviceProperty(baseExternalService,'auth.clientSecret.headerName')



---
{
	method: callProperty(baseExternalService, operation, apiCallName, "method"),
	headers: (createAuthHeadersIfEnabled(baseExternalService, clientIdHeaderName, clientSecretHeaderName, securedProperty)),
	queryParams:  {},
	uriParams: {
		"tenantId": vars.tenantUuid
	},
	maxRetries: callProperty(baseExternalService, operation, apiCallName, "maxRetries"),
	millisBetweenRetries: callProperty(baseExternalService, operation, apiCallName, "millisBetweenRetries"),
	path: callProperty(baseExternalService, operation, apiCallName, "path")
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
		<flow-ref doc:name="affluentManagement-http-request" doc:id="c7077770-c971-4dc8-9e0f-22c8ede2e06c" name="affluentManagementPapi-http-request" />
		<choice doc:name="Choice" doc:id="fafa1b56-9f2e-46fc-8364-92b5fe1220bd">
			<when expression="#[!payload.failingComponent?]">
				<ee:transform doc:name="Transform Message" doc:id="3178b283-7cda-4a4f-839e-aba83735ef0d">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<ee:transform doc:name="exceptionResponse" doc:id="d4831a7a-40b2-4c69-8f6d-e99dc3267565">
					<ee:message />
					<ee:variables>
						<ee:set-variable variableName="exceptionResponse"><![CDATA[(payload.detailedDescription default payload.description) default ""]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<raise-error doc:name="Raise error" doc:id="e36a4aee-6bb6-496e-b7dd-186a9af68fd3" type="AF:INTERNAL_SERVER_ERROR" description="Unable to create a customer product onboarding!" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="post-send-ownership-conf-otp-impl-subflow" doc:id="c41c8342-f169-4e6b-a89c-0e19d6d63f09" >
		<ee:transform doc:name="Request Config" doc:id="ba446988-e66e-441c-9583-792dcf2b6046">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
var baseApiCall = 'api-call.postSendOwnershipConfOTP.affluentManagement.sendOwnershipConfOTP.'
---
{
	"contactPointPhone": {
        "contactPointType": [
            "ContactPointPhone"
          ],
        "id": null,
        "activeFromDate": null,
        "telephoneNumber": vars.originalPayload.telephoneNumber,
        "areaCode": vars.originalPayload.areaCode,
        "phoneCountryCode": vars.originalPayload.phoneCountryCode
    },
	"validationDurationInSec": Mule::p(baseApiCall ++ 'validationDurationInSec'),
	"validationMarginInSec": Mule::p(baseApiCall ++ 'validationMarginInSec')
}]]></ee:set-payload>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="requestConfig"><![CDATA[%dw 2.0
output application/java

import * from dwl::HttpClient

var baseExternalService = "processApi.affluentManagement."
var operation = "sendOwnershipConfOTP."
var apiCallName = "postSendOwnershipConfOTP.affluentManagement."
var securedProperty = false

var clientIdHeaderName = serviceProperty(baseExternalService,'auth.clientId.headerName')
var clientSecretHeaderName = serviceProperty(baseExternalService,'auth.clientSecret.headerName')

---
{
	method: callProperty(baseExternalService, operation, apiCallName, "method"),
	headers: (createAuthHeadersIfEnabled(baseExternalService, clientIdHeaderName, clientSecretHeaderName, securedProperty)),
	queryParams:  {},
	uriParams: {
		"tenantId": vars.tenantUuid,
		"id": vars.onboardingUuid
	},
	maxRetries: callProperty(baseExternalService, operation, apiCallName, "maxRetries"),
	millisBetweenRetries: callProperty(baseExternalService, operation, apiCallName, "millisBetweenRetries"),
	path: callProperty(baseExternalService, operation, apiCallName, "path")
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
		<flow-ref doc:name="affluentManagement-http-request" doc:id="2a4c09dc-0d2a-4d28-bed5-ea288ae8e744" name="affluentManagementPapi-http-request" />
		<choice doc:name="Choice" doc:id="b9fec2e3-3a1e-494e-a06e-f45201663f03">
            <when expression="#[!payload.failingComponent?]">
                <ee:transform doc:name="Transform Message" doc:id="70fa34d8-e93b-4a9d-a7ce-2e731016091a">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json skipNullOn="everywhere"
---
payload]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
            </when>
            <otherwise>
                <ee:transform doc:name="exceptionResponse" doc:id="cefc24ad-fbcc-4fe0-875a-ab4cb9d4f8b5">
                    <ee:message />
                    <ee:variables>
                        <ee:set-variable variableName="exceptionResponse"><![CDATA[payload]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <raise-error doc:name="Raise error" doc:id="0972ad03-78e9-4983-81a5-7e94df914420" type="MULE:INTERNAL_SERVER_ERROR" description="Unable to send ownership confirmation OTP!" />
            </otherwise>
        </choice>
	</sub-flow>
</mule>
